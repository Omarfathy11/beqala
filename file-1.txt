'''
class BlogSerializer(serializers.ModelSerializer):

    user = UserSerializer()

    class Meta:
        model = Blog 
        fields = '__all__'

    def create(self, validated_data):
        print(validated_data)
        # validated_data['title'] = 'Edited in Create Serializer'
        # validated_data['user'] = User.objects.filter().first()
        user_data = validated_data['user']
        user = User.objects.create_user(
            username = user_data['username'],
            email = user_data['email'],
            password = user_data['password']
        )
        validated_data['user'] = user
        instance = super().create(validated_data)
        print(instance)
        return instance



    def update(self, instance, validated_data):
        User.objects.filter(id=instance.user.id).update(
            **validated_data['user']
        )
        validated_data['user'] = User.objects.get(id = instance.user.id)
        return super().update(instance, validated_data)


    def to_representation(self, instance):
        print(instance)
        return super().to_representation(instance)
'''